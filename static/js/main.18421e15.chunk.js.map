{"version":3,"sources":["Components/Coin/coin.jsx","Components/CoinList/CoinList.jsx","Components/ExchangeHeader/logo.svg","Components/ExchangeHeader/piggy.svg","Components/ExchangeHeader/ExchangeHeader.jsx","Components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","TdName","Button","button","Coin","props","balance","showBalance","name","ticker","price","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Header","header","H1","h1","Img","img","ExchangeHeader","src","logo","alt","logo1","Component","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","format","amount","content","buttonClass","handleToggleShowBalance","handleBrr","color","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAMMA,EAAKC,IAAOC,GAAV,0EAKFC,EAAaF,YAAOD,EAAPC,CAAH,4CAIVG,EAASH,YAAOD,EAAPC,CAAH,8CAMNI,EAASJ,IAAOK,OAAV,sFAYG,SAASC,EAAKC,GAEzB,IAoBUC,EAAUD,EAAME,YAClB,cAACV,EAAD,UAAKQ,EAAMC,UAAgB,cAACT,EAAD,gBAE/B,OAGA,+BACI,cAACI,EAAD,UAASI,EAAMG,OACf,cAACX,EAAD,UAAKQ,EAAMI,SACX,eAACZ,EAAD,eAAMQ,EAAMK,SACXJ,EAGD,cAACN,EAAD,UACI,uBAAMW,OAAO,IAAIC,OAAO,OAAxB,UACI,cAACV,EAAD,CAAQW,UAAU,eAAeC,QAnC3B,SAACC,GAEnBA,EAAMC,iBACNX,EAAMY,cAAcZ,EAAMa,WAgCd,qBAGA,cAAChB,EAAD,CAAQW,UAAU,kBAAkBC,QAhClC,SAACC,GAEfA,EAAMC,iBACNX,EAAMc,mBAAkB,EAAMd,EAAMa,WA6BxB,iBAGA,cAAChB,EAAD,CAAQW,UAAU,iBAAiBC,QA7BhC,SAACC,GAEhBA,EAAMC,iBACNX,EAAMc,mBAAkB,EAAOd,EAAMa,WA0BzB,0BCxEpB,IAAME,EAAQtB,IAAOuB,MAAV,gDAII,SAASC,EAAUjB,GAE1B,OACI,eAACe,EAAD,CAAOP,UAAU,qCAAjB,UACA,uBAAOA,UAAU,YAAjB,SACE,+BACE,sCACA,wCACA,uCACA,yCACA,8CAGJ,gCAEIR,EAAMkB,SAASC,KAAK,gBAAEC,EAAF,EAAEA,IAAKjB,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,OAAOC,EAAnB,EAAmBA,MAAOJ,EAA1B,EAA0BA,QAA1B,OAClB,cAACF,EAAD,CACMa,cAAeZ,EAAMY,cACrBE,kBAAmBd,EAAMc,kBACzBX,KAAMA,EACNC,OAAQA,EACRH,QAASA,EACTC,YAAaF,EAAME,YACnBG,MAAOA,EACPQ,SAAUO,GARLA,W,kDCxBd,G,MAAA,IAA0B,kCCA1B,MAA0B,kCCWnCC,EAAS5B,IAAO6B,OAAV,iPAYNC,EAAK9B,IAAO+B,GAAV,0DAUFC,EAAMhC,IAAOiC,IAAV,sFAiBYC,E,4JACjB,WACI,OACI,eAACN,EAAD,WAGC,cAACI,EAAD,CAAKG,IAAKC,EAAMC,IAAI,eAKrB,cAACP,EAAD,4BAIA,cAACE,EAAD,CAAKG,IAAKG,EAAOD,IAAI,sB,GAfWE,aC7CtCC,G,MAAUxC,IAAOyC,QAAV,uKAUPC,EAAU1C,IAAO2C,IAAV,+JAQPvC,EAASJ,IAAOK,OAAV,gDAINuC,EAAsB5C,YAAOI,EAAPJ,CAAH,+CAIrB6C,EAAYC,KAAKC,aAAa,QAAS,CACvCC,MAAQ,WACRC,SAAU,QAKC,SAASC,EAAgB3C,GAGhC,IAAM4C,EAAa5C,EAAME,YAAc,yCAAKoC,EAAUO,OAAO7C,EAAM8C,WAAe,eAC9EC,EAAU,OACRC,EAAc,QAAUhD,EAAME,YAAe,cAAgB,YAcnE,OAZIF,EAAME,cACP6C,EAAU,mCAAIT,EAAUO,OAAO7C,EAAM8C,WAYpC,qCACA,cAACX,EAAD,UAAUY,IACV,eAACd,EAAD,WACI,cAACI,EAAD,CACI5B,QAAST,EAAMiD,wBACfzC,UAAWwC,EAFf,SAGKJ,IAEL,cAAC,EAAD,CAAQpC,UAAY,kBAChBC,QAAWT,EAAMkD,UADrB,SAEI,mBAAG1C,UAAU,oBAAoB2C,MAAM,iB,oBCpDrDC,G,YAAc,SAAA/C,GAAK,OAAIgD,WAAWC,OAAOjD,GAAOkD,QAAQ,MAoG/CC,MAlGf,SAAcxD,GAAQ,IAAD,EACWyD,mBAAS,KADpB,mBACZxD,EADY,KACHyD,EADG,OAEmBD,oBAAS,GAF5B,mBAEZvD,EAFY,KAECyD,EAFD,OAGaF,mBAAS,IAHtB,mBAGZvC,EAHY,KAGF0C,EAHE,KAMfC,EAAiB,uCAAG,oCAAAC,EAAA,sEACCC,IAAMC,IAAI,wCADX,cAChBC,EADgB,OAEhBC,EAAUD,EAASE,KAAKC,MAAM,EAXrB,IAWoCjD,KAAI,SAAAkD,GAAI,OAAIA,EAAKC,MAClD,0CACZC,EAAWL,EAAQ/C,KAAI,SAAAmD,GAAE,OAAIP,IAAMC,IADvB,0CACuCM,MAJnC,SAKCE,QAAQC,IAAIF,GALb,OAKhBrD,EALgB,OAMhBwD,EAAgBxD,EAASC,KAAI,SAAS8C,GAC1C,IAAMI,EAAOJ,EAASE,KACtB,MAAO,CACD/C,IAAKiD,EAAKC,GACVnE,KAAMkE,EAAKlE,KACXC,OAAQiE,EAAKM,OACb1E,QAAS,EACTI,MAAO+C,EAAYiB,EAAKO,OAAOC,IAAIxE,WAIrCuD,EAAYc,GAjBI,4CAAH,qDAuBjBI,qBAAW,WACe,IAApB5D,EAAS6D,QACTlB,OAMV,IAmBMjD,EAAa,uCAAG,WAAOoE,GAAP,qBAAAlB,EAAA,6DACdmB,EADc,iDACwCD,GADxC,SAEGjB,IAAMC,IAAIiB,GAFb,OAEdhB,EAFc,OAIdiB,EAAW9B,EAAYa,EAASE,KAAKS,OAAOC,IAAIxE,OAChD8E,EAAcjE,EAASC,KAAK,SAASiE,GACzC,IAAIC,EAAS,eAAOD,GAIpB,OAHGJ,IAAkBI,EAAOhE,MAC3BiE,EAAUhF,MAAQ6E,GAEZG,KAGPzB,EAAYuB,GAbM,2CAAH,sDAsBjB,OACE,sBAAK3E,UAAU,MAAf,UACM,cAAC,EAAD,IACD,cAAC,EAAD,CACGsC,OAAQ7C,EACRC,YAAaA,EACbgD,UAXQ,WAChBQ,GAAY,SAAA4B,GAAU,OAAIA,EAAa,SAW/BrC,wBAhDoB,WAC5BU,GAAe,SAAA4B,GAAQ,OAAKA,QAgDvB,cAACtE,EAAD,CACGC,SAAUA,EACVhB,YAAaA,EACbU,cAAeA,EACfE,kBAhDc,SAAC0E,EAAOR,GAChC,IAAIS,EAAgBD,EAAQ,GAAI,EAC1BL,EAAcjE,EAASC,KAAK,SAASiE,GACzC,IAAIC,EAAS,eAAOD,GAKpB,OAJKJ,IAAmBI,EAAOhE,MAC7BiE,EAAUpF,SAAWwF,EACrB/B,GAAY,SAAA4B,GAAU,OAAIA,EAAaG,EAAgBJ,EAAUhF,UAE5DgF,KAETzB,EAAYuB,UC1DDO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.18421e15.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst Td = styled.td`\r\n  border: 2px solid #cccccc;\r\n  width: 30vh;\r\n`;\r\n\r\nconst TdControls = styled(Td)`\r\n  width: 32vw;\r\n`;\r\n\r\nconst TdName = styled(Td)`\r\n  width: 20vw;\r\n\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  font-size: 11px;\r\n  width: 64px;\r\n  margin: 3px 5px 0;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Coin(props) {\r\n\r\n    const handleRefresh = (event) => {\r\n        // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleRefresh(props.tickerId);\r\n        } \r\n        \r\n    const handleBuy = (event) => {\r\n                // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleTransaction(true, props.tickerId);\r\n        } \r\n\r\n    const handleSell = (event) => {\r\n            // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleTransaction(false, props.tickerId);\r\n        } \r\n\r\n\r\n\r\n        const balance = props.showBalance ?\r\n            <Td>{props.balance}</Td> : <Td>-</Td>;\r\n\r\n        return (\r\n            \r\n     \r\n        <tr>\r\n            <TdName>{props.name}</TdName>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {balance}\r\n            \r\n\r\n            <TdControls>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <Button className=\"btn btn-info\" onClick={handleRefresh}>\r\n                    Refresh\r\n                    </Button>\r\n                    <Button className=\"btn btn-warning\" onClick={handleBuy}>\r\n                    Buy\r\n                    </Button>\r\n                    <Button className=\"btn btn-danger\" onClick={handleSell}>\r\n                    Sell\r\n                    </Button>\r\n                </form>\r\n                 \r\n           </TdControls>\r\n        </tr>       \r\n        ); \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n/*class component \r\nexport default Coin extends Component {\r\n\r\n  handleClick = (event) => {\r\n      // Prevent the default action of submitting the form\r\n      event.preventDefault();\r\n      this.props.handleRefresh(this.props.tickerId);\r\n \r\n\r\n} \r\n\r\n\r\n  render(){\r\n\r\n      const balance = this.props.showBalance ?\r\n          <Td>{this.props.balance}</Td> : <Td>-</Td>;\r\n\r\n      return (\r\n          \r\n   \r\n      <tr>\r\n          <Td>{this.props.name}</Td>\r\n          <Td>{this.props.ticker}</Td>\r\n          <Td>${this.props.price}</Td>\r\n          {balance}\r\n          \r\n\r\n          <Td>\r\n              <form action=\"#\" method=\"POST\">\r\n                  <button onClick={this.handleClick}>Refresh</button>\r\n              </form>\r\n               \r\n         </Td>\r\n      </tr>       \r\n      ); \r\n  }\r\n}\r\n*/\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Coin from '../Coin/coin.jsx';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n    \r\n        return (\r\n            <Table className=\"table table-primary table-bordered\">\r\n            <thead className=\"thead-row\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                <th>Balance</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead> \r\n            <tbody>\r\n              {\r\n                props.coinData.map( ({key, name,ticker,price, balance}) =>\r\n                  <Coin key={key} \r\n                        handleRefresh={props.handleRefresh}\r\n                        handleTransaction={props.handleTransaction}\r\n                        name={name} \r\n                        ticker={ticker} \r\n                        balance={balance}\r\n                        showBalance={props.showBalance}\r\n                        price={price}\r\n                        tickerId={key}\r\n                        />\r\n                )\r\n    \r\n              }\r\n              \r\n            </tbody>\r\n          </Table>\r\n        )\r\n    \r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/piggy.e8b3e2a7.svg\";","\r\nimport React, { Component } from 'react';\r\nimport './ExchangeHeader.css';\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\nimport logo1 from './piggy.svg';\r\n\r\n\r\n\r\n\r\n\r\nconst Header = styled.header`\r\n    background-color: #315be3;\r\n    min-height: 10vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: right;\r\n    justify-content: center;\r\n    font-size: 100px;\r\n    color: rgb(255, 255, 255);\r\n\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n\r\n    font-size: 5rem;\r\n\r\n\r\n\r\n`;\r\n\r\n\r\n\r\nconst Img = styled.img`\r\n    height: 10vmin;\r\n    pointer-events: none;\r\n\r\n\r\n\r\n\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                \r\n             \r\n             <Img src={logo} alt=\"React logo\" />\r\n            \r\n        \r\n      \r\n            \r\n            <H1>\r\n             Coin Exchange\r\n            </H1>\r\n            \r\n            <Img src={logo1} alt=\"Piggy logo\"/>\r\n            \r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './AccountBalance.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    \r\n    font-size: 1.5rem;\r\n    color: black;\r\n    background-color: #40;\r\n    padding: 1rem 8rem 1rem 1rem;\r\n    text-align: right;\r\n\r\n`;\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 1.5em\r\n    vertical-align: middle;\r\n    text-align: middle;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin: 0 8px;\r\n`;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\n    width: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style:  'currency',\r\n    currency: 'USD'\r\n});\r\n\r\n\r\n\r\nexport default function AccountBalance (props) {\r\n\r\n   \r\n        const buttonText = props.showBalance ? <> { formatter.format(props.amount) }</> : 'Show Balance';\r\n        let content = '\\u00A0';  //so that the page does not jump around\r\n        const buttonClass = 'btn ' + (props.showBalance ?  'btn-warning' : 'btn-info' );\r\n        \r\n        if (props.showBalance) {\r\n           content = <>{ formatter.format(props.amount) }</>;\r\n        } \r\n        \r\n\r\n       /* \r\n       if (props.showBalance) {\r\n            content = <> Balance: {props.amount} </>\r\n        }\r\n        \r\n        */\r\n  \r\n        return (\r\n            <>\r\n            <Balance>{content}</Balance>\r\n            <Section> \r\n                <BalanceToggleButton \r\n                    onClick={props.handleToggleShowBalance}\r\n                    className={buttonClass}>  \r\n                    {buttonText}\r\n                </BalanceToggleButton>\r\n                <Button className = \"btn btn-success\"\r\n                    onClick = {props.handleBrr}>\r\n                    <i className=\"fas fa-helicopter\" color='blue' ></i>\r\n                </Button>\r\n            </Section>\r\n            </>\r\n        );\r\n    \r\n}\r\n\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: propTypes.number.isRequired\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CoinList from './Components/CoinList/CoinList.jsx';\r\nimport ExchangeHeader from './Components/ExchangeHeader/ExchangeHeader.jsx';\r\nimport AccountBalance from './Components/AccountBalance/AccountBalance.jsx';\r\nimport axios from 'axios';\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\n\r\n\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction App (props) { \r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(false);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n\r\nconst componentDidMount = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\r\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n    const coinData = await Promise.all(promises);\r\n    const coinPriceData = coinData.map(function(response) {\r\n      const coin = response.data;\r\n      return {\r\n            key: coin.id,\r\n            name: coin.name,\r\n            ticker: coin.symbol,\r\n            balance: 0,\r\n            price: formatPrice(coin.quotes.USD.price),\r\n           };\r\n          });   \r\n          // retrieve the prices\r\n          setCoinData(coinPriceData);\r\n        };\r\n\r\n\r\n\r\n\r\n      useEffect( function() {\r\n        if (coinData.length === 0) {\r\n            componentDidMount();       \r\n           }\r\n      });\r\n\r\n\r\n\r\n  const handleToggleShowBalance = () => {\r\n      setShowBalance(oldValue => !oldValue);\r\n     }\r\n\r\n\r\n  const handleTransaction = (isBuy, valueChangeId) => {\r\n    var balanceChange = isBuy ? 1: -1;\r\n    const newCoinData = coinData.map( function(values){\r\n      let newValues = {...values};\r\n      if ( valueChangeId  === values.key){\r\n        newValues.balance += balanceChange;\r\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price );\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(newCoinData);\r\n  }\r\n  \r\n\r\n  const handleRefresh = async (valueChangeId) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\r\n    const response = await axios.get(tickerUrl);\r\n    \r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map( function(values){  //map method to transform each and every value\r\n      let newValues = {...values};\r\n      if(valueChangeId === values.key) {\r\n       newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n     });\r\n      \r\n      setCoinData(newCoinData);\r\n    };\r\n      \r\n\r\n    const handleBrr = () => {\r\n      setBalance( oldBalance => oldBalance + 1200 );\r\n    }\r\n\r\n \r\n    return (\r\n      <div className=\"App\">\r\n            <ExchangeHeader/>\r\n           <AccountBalance \r\n              amount={balance}\r\n              showBalance={showBalance}\r\n              handleBrr={handleBrr}\r\n              handleToggleShowBalance={handleToggleShowBalance}/>\r\n           <CoinList \r\n              coinData={coinData}\r\n              showBalance={showBalance}\r\n              handleRefresh={handleRefresh}\r\n              handleTransaction={handleTransaction}\r\n              />\r\n      </div>\r\n    );\r\n  }\r\n \r\n\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}